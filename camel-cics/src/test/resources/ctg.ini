##*****************************************************************************
##* IBM CICS Transaction Gateway - Configuration File          Docker         *
##*****************************************************************************
##
##   
##          "Copyright IBM Corp. 2022 All rights reserved"; 
##         
## 
## Status: Version 9 Release 3 
##
## Format:
##   SECTION Section = Name
##      Parameter = Value
##      Parameter = Value
##      ...
##   ENDSECTION
##
## "Section" must be either Product, Gateway, Client, IPICServer, Server,
## Driver or WebService. There must be only one Product, one Gateway and 
## one Client section but there can be several IPICServer, Server, Driver 
## and WebService sections. At least one IPICServer or Server section is 
## required and all other sections are optional. For each type of section, 
## you can define a set of parameters and associated values. If these are 
## omitted, default values are used. Uncomment properties to activate them.
##
## Refer to the product documentation for full details of available parameters 
## and values for each section.
##
###############################################################################
## Warning: Do not directly edit this file, but copy it to 'ctg.ini' and make
## changes to it as 'ctg.ini'.
###############################################################################



##-----------------------------------------------------------------------------
## Product section - This section defines product-wide settings. There must be
##                   no more than one Product section. The fully qualified
##                   APPLID must be unique across all CICS TG instances. The
##                   default server can be set to any server defined in this
##                   file. 

SECTION PRODUCT
#   Applid = CTGAPPLD           # The APPLID of the Gateway daemon
#   ApplidQualifier = CTGAPQAL  # The APPLID qualifier of the Gateway daemon
#   DefaultServer = CICSTCP     # The default server used by the Gateway daemon
#   KeyRing = ServerKeyRing     # The key ring used by SSL connections
#   KeyRingPw = password        # The password for the key ring
#   KeyRingPwScrambled = off    # Key ring password encrypted by CICS TG
#                               # Configuration Tool
ENDSECTION



##-----------------------------------------------------------------------------
## Gateway section - This section defines properties for the Gateway daemon.
##                   There must be no more than one Gateway section.

SECTION GATEWAY

##-----------------------------------------------------------------------------
## The following properties are command line Gateway daemon parameters. They
## can be overridden by specifying the same property on the command line.
##
## If a full path is not specified for the TFile property, the trace file will
## be created in /var/cicscli

#   InitConnect = 1             # Initial number of connection manager threads
#   MaxConnect = 100            # Maximum number of connection manager threads
#                               # CICS TG Desktop Edition is limited to 5 
#   InitWorker = 1              # Initial number of worker threads
#   MaxWorker = 100             # Maximum number of worker threads
#                               # CICS TG Desktop Edition is limited to 5
#   MaxHTTPConnect = 100        # Maximum number of HTTP and HTTPS client threads
#                               # CICS TG Desktop Edition is limited to 5

#   DNSNames = off              # Use DNS to display symbolic TCP/IP host names

#   Trace = on                  # Enable tracing messages
#   NoInput = on                # Disable the reading of input from the console
#   Quiet = on                  # Suppress all console output
#   TFile = /var/cicscli/gateway.trc
#                               # Trace file name
#   TFileSize = 80              # Trace file size in kilobytes
#   TruncationSize = 80         # Maximum size of trace data blocks in bytes
#   DumpOffset = 0              # Byte offset in data to start trace output
#   Stack = on                  # Enable exception stack tracing

#   AdminPort = 2810            # Port for local administration

#   RequestExits = com.ibm.ctg.samples.requestexit.BasicMonitor
#                               # Comma separated list of classes to use as
#                               # request monitors

##-----------------------------------------------------------------------------
## The following properties can only be set in this file and cannot be
## overridden on the command line.

#   WorkerTimeout = 10000       # Time in milliseconds to wait for a Worker
#                               # thread to become available
#   CloseTimeout = 10000        # Time in milliseconds to wait for outstanding
#                               # requests to complete upon client disconnect
#   ConnectionLogging = on      # Log clients connecting and disconnecting
#   CicsLogging = off           # Log messages received from CICS servers

#   StatInt = 030000            # Statistics interval in the form HHMMSS
#   StatEOD = 000000            # Statistics end of day time in the form HHMMSS

##   CICSRequestExit = com.ibm.ctg.samples.ha.BasicCICSRequestExit
#                               # Class to use as a CICS request exit to
#                               # perform dynamic server selection
    CICSIntercept = com.ibm.ctg.samples.intercept.CicsReadinessPlugin
#                               # class for CICSTG Health  Check Readiness Probe 
##   CICSIntercept = com.ibm.ctg.samples.intercept.BasicCicsPlugin
#                               # Class to use as a CICS Intercept plug-in to
#                               # intercept ECI, EPI and ESI requests from
#                               # remote mode applications

##-----------------------------------------------------------------------------
## The following properties define the protocols which the Gateway daemon
## accepts connections on.
##
## Entries for a particular protocol have two parts:
##   protocol@<protocol-name>.handler = <class-name>
##        The name of the class which provides the handler for this protocol.
##   protocol@<protocol-name>.parameters = <parameters>
##        A list of parameters to be passed to the protocol handler. The
##        possible parameters vary between protocol handlers.

#   # Protocol handler for statistics API requests
#   protocol@statsapi.handler = com.ibm.ctg.server.RestrictedTCPHandler
#   protocol@statsapi.parameters = bind=;\
#                                  connecttimeout=2000;\
#                                  maxconn=5;\
#                                  port=2980;

#   # Protocol handler for TCP/IP requests
   protocol@tcp.handler = com.ibm.ctg.server.TCPHandler
   protocol@tcp.parameters = bind=;\
                             connecttimeout=2000;\
                             idletimeout=0;\
                             pingfrequency=0;\
                             port=2006;\
                             solinger=0;
#
#   # These additional parameters are also available:
#                            #dropworking;
#                            #requiresecurity;

#   # Protocol handler for SSL requests
#   protocol@ssl.handler = com.ibm.ctg.server.SslHandler
#   protocol@ssl.parameters = bind=;\
#                             clientauth=off;\
#                             connecttimeout=2000;\
#                             idletimeout=0;\
#                             pingfrequency=0;\
#                             port=8050;\
#                             solinger=0;
#
#   # These additional parameters are also available:
#                            #ciphersuites=CipherSuite1,CipherSuite2;
#                            #dropworking;
#                            #requiresecurity;

## The following subsections define the protocols which the Gateway daemon
## accepts HTTP connections on.

#   # Protocol handler for HTTP requests.
#   # There must be no more than one HTTP subsection.
#   SUBSECTION HTTP
#      Port=2080                # Port for incoming HTTP client requests
#      Bind=                    # IP address or host name to which the protocol
#                               # handler is bound
#   ENDSUBSECTION
#
#   # Protocol handler for HTTPS requests.
#   # There must be no more than one HTTPS subsection.
#   SUBSECTION HTTPS
#      Port=2443                # Port for incoming HTTPS client requests
#      Bind=                    # IP address or host name to which the protocol
#                               # handler is bound
#      ClientAuth=off           # Enable client authentication
##      CipherSuites=CipherSuite1,CipherSuite2
#                               # Restrict the cipher suites to use with SSL
#   ENDSUBSECTION

##-----------------------------------------------------------------------------
## The following properties define logging destinations and parameters. The
## default logging destination is file. For example the default error log
## settings are: 
## log@error.dest = file
## log@error.parameters = filename=/var/cicscli/cicstg.log;\
##                        maxfiles=1;\
##                        filesize=0;
##
## When running the Gateway daemon as a background process using the ctgd
## command, you must configure the information and error logs to write to file,
## otherwise messages generated by the Gateway daemon are lost.
##
## If a full path is not specified for the filename when using file logging,
## the file will be created in /var/cicscli. File sizes are in kilobytes.

#   # Information log destination and parameters
#   log@info.dest = file
#   log@info.parameters = filename=/var/cicscli/cicstg.log;\
#                         maxfiles=10;\
#                         filesize=1024;

#   # Error log destination and parameters
#   log@error.dest = file
#   log@error.parameters = filename=/var/cicscli/cicstg.log;\
#                          maxfiles=10;\
#                          filesize=1024;
#
#   # Defines whether stats recording is on or off
#   statsrecording = on
#
#   # Statistics recording destination and parameters
#   log@statistics.dest = file
#   log@statistics.parameters = filename=/var/cicscli/ctgstatslog.xml

ENDSECTION



##-----------------------------------------------------------------------------
## Client section - This section defines settings for the Client daemon. There
##                  must be no more than one Client section.
##
## If a full path is not specified for the LogFile, LogFileInfo or TraceFile
## properties, the files will be created in /var/cicscli

#SECTION CLIENT = *             # Auto-install client on the server
#   MaxServers = 10             # Maximum concurrent server connections
#   MaxRequests = 256           # Maximum concurrent server interactions
#                               # CICS TG Desktop Edition is limited to 32
#   MaxBufferSize = 32          # Maximum COMMAREA size in kilobytes
#   UseOEMCP = Y                # Use OEM code page
#   LogFile = cicscli.log       # Log file for errors and warnings
#   LogFileInfo = cicscli.log   # Log file for general information
#   TermInstLogging = N         # Log terminal installations and deletions
#   TerminalExit = EXIT         # String which causes terminal emulator to exit
#   PrintCommand = prcmd        # Command or script to execute when printing -
#                               # do not use if using PrintFile
#   PrintFile = prfile          # File to output print requests to - do not use
#                               # if using PrintCommand
#   CCSID = 850                 # Code page identifier override
#   SrvRetryInterval = 60       # Connection retry interval in seconds
#   TraceFile = /var/cicscli/cicscli.bin 
#                               # Trace file, the directory must already exist
#   MaxWrapSize = 100           # Max file size for wrapping trace in kilobytes
#                               # used by memory mapped tracing 
#   Trace = CLI,CCL             # Enable tracing on specified modules
#ENDSECTION



##-----------------------------------------------------------------------------
## WebService section - This section defines a JSON web service which is made
##                      available by the Gateway daemon. There can be several
##                      WebService sections.

##SECTION WEBSERVICE = CICSPROG # Name of the web service
##   Uri = programs/cicsprog    # The uri for this web service. The web service is
##                              # available at http://<hostname>:<port>/<uri>
##   BindFile = cicsprog.wsbind # The web service binding file for this webservice 
##   Server = CICSIPIC          # The CICS server that requests to this web 
##                              # service are sent to
##   TransactionId = TRN1       # The transaction stored in the EIBTRNID field in 
##                              # the CICS EXEC interface block
##   DefaultMirror = Y          # Attach the called CICS program using the default
##                              # mirror transaction CPMI. If 'N' then the
##                              # transaction specified in TransactionId is used.
##   Timeout = 0                # Time in seconds to wait for CICS to respond
##ENDSECTION



##-----------------------------------------------------------------------------
## IPICServer section - This section defines an IPIC server to which the
##                      Gateway daemon can connect. There can be several
##                      IPICServer sections. At least one IPICServer or Server
##                      section is required.
##
## Note that this is an example only. Parameters might need changes from their
## default or illustrated values to allow for successful communications.

#SECTION IPICSERVER = CICSIPIC  # Arbitrary name for the server
#   Description = IPIC Server   # Arbitrary description for the server
#   Hostname = cicsipic.ibm.com # The server's TCP/IP name or IPv4 or IPv6
#                               # address
#   Port = 1234                 # The listening TCPIPSERVICE port in CICS
#   TcpKeepAlive = Y            # Set the TCP KEEPALIVE Socket option
#   Ssl = N                     # Enable Secure Sockets Layer (SSL)
##   CipherSuites = CipherSuite1,CipherSuite2
#                               # Restrict the cipher suites to use with SSL
#   SrvIdleTimeout = 0          # Time in minutes to keep idle connections open
#   ConnectTimeout = 0          # Time in seconds to wait for CICS to respond
#                               # during connection establishment
#   SrvRetryInterval = 60       # Connection retry interval in seconds
#   SendSessions = 100          # Number of simultaneous conversations
#                               # requested
#                               # CICS TG Desktop Edition is limited to 5
#   ECITimeout = 0              # Time in seconds to wait for CICS to respond
#                               # to an ECI request
#   HeartbeatInterval = 30      # Time in seconds between heartbeat requests
#   CICSApplid = CICSAPPL       # The APPLID of the destination CICS server
#                               # (for verification only)
#   CICSApplidQualifier = CICSQUAL
#                               # The APPLID qualifier of the destination CICS
#                               # server (for verification only)
#ENDSECTION



##-----------------------------------------------------------------------------
## Server section - This section defines a server to which the Client daemon
##                  can connect. There can be several Server sections. At least
##                  one IPICServer or Server section is required.
##
## Note that these are examples only. Parameters might need changes from their
## default or illustrated values to allow for successful communications,
## particularly when using SNA. 

#SECTION SERVER = CICSTCP       # Arbitrary name for the server
#   Description = TCP/IP Server # Arbitrary description for the server
#   Protocol = TCPIP            # Matches with a Driver section below
#   NetName = cicstcp.ibm.com   # The server's TCP/IP name or address
#   Port = 0                    # Use the default TCP/IP CICS port
#   SrvIdleTimeout = 0          # Time in minutes to keep idle connections open
#   UpperCaseSecurity = Y       # Fold userID and password to uppercase
#   ConnectTimeout = 0          # Time in seconds to wait for CICS to respond
#                               # during connection establishment
#   TcpKeepAlive = Y            # Set the TCP KEEPALIVE socket option
#   InitialTransID = TRN1       # Transaction to run upon connection
#   ModelTerm = *               # Model terminal definition to use
#ENDSECTION

#SECTION SERVER = CICSSNA       # Arbitrary name for the server
#   Description = SNA Server    # Arbitrary description for the server
#   Protocol = SNA              # Matches with a Driver section below
#   NetName = ABCD1234          # The server's LU name (Partner LU name)
#   PartnerLUAlias = Y          # Use an alias name for the Partner LU name
#   LocalLUName = WXYZ9999      # The client's local LU alias name
#   ModeName = LU62PS           # The SNA communications mode name
#   SrvIdleTimeout = 0          # Time in minutes to keep idle connections open
#   UpperCaseSecurity = Y       # Fold userID and password to uppercase
#   InitialTransID = TRN1       # Transaction to run upon connection
#   ModelTerm = *               # Model terminal definition to use
#ENDSECTION



##-----------------------------------------------------------------------------
## Driver section - This section defines a communications protocol library used
##                  to communicate with a server. There can be several Driver
##                  sections.
##
## Note that Driver sections are only required for servers connected over
## TCP/IP and SNA. A Driver section is not required for IPIC server
## definitions.

#SECTION DRIVER = TCPIP         # Matches the Server's Protocol value
#   DriverName = CCLIBMIP       # Use the IBM TCP/IP communications library
#ENDSECTION

#SECTION DRIVER = SNA           # Matches the Server's Protocol value
#   DriverName = CCLIBMSN       # Use the IBM SNA communications library
#ENDSECTION

##-----------------------------------------------------------------------------
##JWTTOKENPROVIDER  - This section defines JWT token provider attributes.
##                    There can be multiple JWT token provider sections.
#SECTION JWTTOKENPROVIDER = TOKENPROVIDERA	# Arbitrary name for the JWT token 
											# provider
#    DESCRIPTION = Test						# Description of the token provider
#    ALGORITHM = HS256						# Algorithm used by the JWT token 
											# provider
#    SECRETKEY = secret						# Shared secret key
#    SCRAMBLESECRETKEY = N					# Shared secret key encrypted by 
											# CICS TG
#	 TRUSTALIASNAME = tname					# If asymmetric signing algorithms
											# is used, 
											# then the TRUSTALIASNAME parameter
										    # should be set 	
#    USERIDENTIFIER = sub					# The useridentifier parameter 
											# specifies the claim to create the
											# user subject
#    REALMNAME = *							# The subject realm
#    REALMIDENTIFIER = realmname			# The claim to create the subject 
											# realm.
#    MAPDISTRIBUTEDIDENTITY=true			# Specifies if the identity in the 
											# JWT is a RACF user ID or the 
										    # distributed ID
#    ISSUERIDENTIFIER=ABC					# The expected issuer (iss)
#	 MAXLEEWAY=3							# The leeway for the JWT expiry
											# validation in seconds
#ENDSECTION

##*****************************************************************************
##* End of file                                                               *
##*****************************************************************************
